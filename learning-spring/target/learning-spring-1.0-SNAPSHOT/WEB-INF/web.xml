<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app
        PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd">
<!--//TODO jsp 版本与tomcat版本对应关系-->
<web-app>

    <display-name>learning-spring</display-name>
    <description>web.xml 中各元素是有顺序的,如果出现错误,有可能元素顺序位置放置错误。
        例如元素顺序:context-param filter listener servlet
    </description>

    <!--定义需要加载 spring应用上下文 文件位置,各文件以逗号分隔,可以使用通配符,classpath:文件或者/WEB-INF/下的文件-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-config/applicationContext.xml</param-value>
    </context-param>


    <!-- 在Spring框架中是如何解决从页面传来的字符串的编码问题的呢？
    下面我们来看看Spring框架给我们提供过滤器CharacterEncodingFilter
    这个过滤器就是针对于每次浏览器请求进行过滤的，然后再其之上添加了父类没有的功能即处理字符编码。
    其中encoding用来设置编码格式，forceEncoding用来设置是否理会 request.getCharacterEncoding()方法，
    设置为true则强制覆盖之前的编码格式。-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--启动Web容器时，自动装配ApplicationContext的配置信息-->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>


    <!--spring MVC 的前端控制器,默认情况下,DispatcherServlet 在加载时会从一个基于这个servlet名字的
     XML文件中加载SPRING应用上下文。在这个示例中,DispatcherServlet将尝试从一个名为spring-servlet.xml
     的文件（位于应用程序的WEB-INF目录下）来加载应用上下文-->
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    </servlet>
    <!--声明DispatcherServlet处理哪些URL-->
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <!--会话超时配置，单位分钟-->
    <session-config>
        <session-timeout>360</session-timeout>
    </session-config>

    <!--指定欢迎页面-->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <!--当系统出现404错误，跳转到页面404.html-->
    <!--<error-page>-->
    <!--<error-code>404</error-code>-->
    <!--<location>/404.html</location>-->
    <!--</error-page>-->
    <!--当系统出现java.lang.NullPointerException，跳转到页面error.html-->
    <!--<error-page>-->
    <!--<exception-type>java.lang.NullPointerException</exception-type>-->
    <!--<location>/error.html</location>-->
    <!--</error-page>-->

    <!--web app 2.4 默认支持jsp el表达式-->


</web-app>
